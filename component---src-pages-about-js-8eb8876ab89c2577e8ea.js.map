{"version":3,"sources":["webpack://gatsby-starter-hello-world/./node_modules/@material-ui/core/esm/utils/setRef.js","webpack://gatsby-starter-hello-world/./node_modules/@material-ui/core/esm/utils/useForkRef.js","webpack://gatsby-starter-hello-world/./node_modules/@material-ui/core/esm/utils/useIsFocusVisible.js","webpack://gatsby-starter-hello-world/./node_modules/@material-ui/core/esm/Link/Link.js","webpack://gatsby-starter-hello-world/./src/pages/about.js"],"names":["setRef","ref","value","current","useForkRef","refA","refB","refValue","hadKeyboardEvent","hadFocusVisibleRecently","hadFocusVisibleRecentlyTimeout","inputTypesWhitelist","text","search","url","tel","email","password","number","date","month","week","time","datetime","handleKeyDown","event","metaKey","altKey","ctrlKey","handlePointerDown","handleVisibilityChange","this","visibilityState","isFocusVisible","node","type","tagName","target","matches","error","readOnly","isContentEditable","handleBlurVisible","window","clearTimeout","setTimeout","useIsFocusVisible","onBlurVisible","instance","doc","ownerDocument","addEventListener","Link","props","classes","className","_props$color","color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_useIsFocusVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","Typography","root","concat","capitalize","button","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","name","Layout","Grid","container","spacing","item","xs","Paper","style","md","Box","display","flexDirection","justifyContent","alignItems","icon","githubFill","height","width","href","discordIcon"],"mappings":"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","file":"component---src-pages-about-js-8eb8876ab89c2577e8ea.js","sourcesContent":["// TODO v5: consider to make it private\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","import * as React from 'react';\nimport setRef from './setRef';\nexport default function useForkRef(refA, refB) {\n  /**\n   * This will create a new function if the ref props change and are defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior\n   */\n  return React.useMemo(function () {\n    if (refA == null && refB == null) {\n      return null;\n    }\n\n    return function (refValue) {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}","// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nvar hadKeyboardEvent = true;\nvar hadFocusVisibleRecently = false;\nvar hadFocusVisibleRecentlyTimeout = null;\nvar inputTypesWhitelist = {\n  text: true,\n  search: true,\n  url: true,\n  tel: true,\n  email: true,\n  password: true,\n  number: true,\n  date: true,\n  month: true,\n  week: true,\n  time: true,\n  datetime: true,\n  'datetime-local': true\n};\n/**\n * Computes whether the given element should automatically trigger the\n * `focus-visible` class being added, i.e. whether it should always match\n * `:focus-visible` when focused.\n * @param {Element} node\n * @return {boolean}\n */\n\nfunction focusTriggersKeyboardModality(node) {\n  var type = node.type,\n      tagName = node.tagName;\n\n  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {\n    return true;\n  }\n\n  if (tagName === 'TEXTAREA' && !node.readOnly) {\n    return true;\n  }\n\n  if (node.isContentEditable) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\n * If the most recent user interaction was via the keyboard;\n * and the key press did not include a meta, alt/option, or control key;\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\n * @param {KeyboardEvent} event\n */\n\n\nfunction handleKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n\n  hadKeyboardEvent = true;\n}\n/**\n * If at any point a user clicks with a pointing device, ensure that we change\n * the modality away from keyboard.\n * This avoids the situation where a user presses a key on an already focused\n * element, and then clicks on a different element, focusing it with a\n * pointing device, while we still think we're in keyboard modality.\n */\n\n\nfunction handlePointerDown() {\n  hadKeyboardEvent = false;\n}\n\nfunction handleVisibilityChange() {\n  if (this.visibilityState === 'hidden') {\n    // If the tab becomes active again, the browser will handle calling focus\n    // on the element (Safari actually calls it twice).\n    // If this tab change caused a blur on an element with focus-visible,\n    // re-apply the class when the user switches back to the tab.\n    if (hadFocusVisibleRecently) {\n      hadKeyboardEvent = true;\n    }\n  }\n}\n\nfunction prepare(doc) {\n  doc.addEventListener('keydown', handleKeyDown, true);\n  doc.addEventListener('mousedown', handlePointerDown, true);\n  doc.addEventListener('pointerdown', handlePointerDown, true);\n  doc.addEventListener('touchstart', handlePointerDown, true);\n  doc.addEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nexport function teardown(doc) {\n  doc.removeEventListener('keydown', handleKeyDown, true);\n  doc.removeEventListener('mousedown', handlePointerDown, true);\n  doc.removeEventListener('pointerdown', handlePointerDown, true);\n  doc.removeEventListener('touchstart', handlePointerDown, true);\n  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nfunction isFocusVisible(event) {\n  var target = event.target;\n\n  try {\n    return target.matches(':focus-visible');\n  } catch (error) {} // browsers not implementing :focus-visible will throw a SyntaxError\n  // we use our own heuristic for those browsers\n  // rethrow might be better if it's not the expected error but do we really\n  // want to crash if focus-visible malfunctioned?\n  // no need for validFocusTarget check. the user does that by attaching it to\n  // focusable events only\n\n\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\n}\n/**\n * Should be called if a blur event is fired on a focus-visible element\n */\n\n\nfunction handleBlurVisible() {\n  // To detect a tab/window switch, we look for a blur event followed\n  // rapidly by a visibility change.\n  // If we don't see a visibility change within 100ms, it's probably a\n  // regular focus change.\n  hadFocusVisibleRecently = true;\n  window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n  hadFocusVisibleRecentlyTimeout = window.setTimeout(function () {\n    hadFocusVisibleRecently = false;\n  }, 100);\n}\n\nexport default function useIsFocusVisible() {\n  var ref = React.useCallback(function (instance) {\n    var node = ReactDOM.findDOMNode(instance);\n\n    if (node != null) {\n      prepare(node.ownerDocument);\n    }\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(isFocusVisible);\n  }\n\n  return {\n    isFocusVisible: isFocusVisible,\n    onBlurVisible: handleBlurVisible,\n    ref: ref\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import React from \"react\"\r\nimport Layout from \"../components/Layout\"\r\nimport { Grid, Typography, Box, Paper, Link } from \"@material-ui/core\"\r\nimport { Icon, InlineIcon } from \"@iconify/react\"\r\nimport discordIcon from \"@iconify-icons/bi/discord\"\r\nimport slackSquareFilled from \"@iconify-icons/ant-design/slack-square-filled\"\r\nimport githubFill from \"@iconify-icons/akar-icons/github-fill\"\r\n\r\nconst about = () => {\r\n  return (\r\n    <Layout>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper style={{ padding: \"10px\" }}>\r\n            <Typography variant=\"body1\" component=\"p\">\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam a\r\n              eros a sapien condimentum tempor sed id urna. Morbi in facilisis\r\n              enim. Nunc aliquam vestibulum urna ac mattis. Sed dapibus feugiat\r\n              purus sit amet laoreet. Mauris id lobortis nisl. Aenean convallis\r\n              iaculis orci. Nam volutpat lorem eros, sed facilisis dui gravida\r\n              quis. Morbi facilisis molestie luctus. Proin urna dolor, porta ac\r\n              massa ac, aliquam elementum metus.\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Paper style={{ padding: \"10px\" }}>\r\n            <Typography variant=\"h6\" component=\"h6\">\r\n              Meet the community\r\n            </Typography>\r\n            <br />\r\n            <Box\r\n              display=\"flex\"\r\n              flexDirection=\"column\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"flex-start\"\r\n            >\r\n              <Typography\r\n                variant=\"body1\"\r\n                component=\"p\"\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Icon\r\n                  icon={githubFill}\r\n                  height=\"35px\"\r\n                  width=\"35px\"\r\n                  style={{ padding: \"5px 10px 0 0\" }}\r\n                />\r\n                <Link href=\"https://github.com/pineapple45\">\r\n                  https://github.com/pineapple45\r\n                </Link>\r\n              </Typography>\r\n\r\n              <Typography\r\n                variant=\"body1\"\r\n                component=\"p\"\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Icon\r\n                  icon={discordIcon}\r\n                  height=\"35px\"\r\n                  width=\"35px\"\r\n                  style={{ padding: \"5px 10px 0 0\" }}\r\n                />\r\n                <Link href=\"https://discord.com/shadedvoxels\">\r\n                  https://discord.com/shadedvoxels\r\n                </Link>\r\n              </Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default about\r\n"],"sourceRoot":""}